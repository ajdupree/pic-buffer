

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Tue Apr 19 00:33:03 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F14K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17  0000                     _ANSELbits	set	3966
    18  0000                     _INTCONbits	set	4082
    19  0000                     _IOCAbits	set	3961
    20  0000                     _LATC	set	3979
    21  0000                     _LATCbits	set	3979
    22  0000                     _OSCCON	set	4051
    23  0000                     _PORTAbits	set	3968
    24  0000                     _RCONbits	set	4048
    25  0000                     _TRISAbits	set	3986
    26  0000                     _TRISC	set	3988
    27  0000                     _WPUA2	set	31674
    28  0000                     _nRABPU	set	32655
    29                           
    30                           ; #config settings
    31  0000                     
    32                           	psect	cinit
    33  0001CE                     __pcinit:
    34                           	opt stack 0
    35  0001CE                     start_initialization:
    36                           	opt stack 0
    37  0001CE                     __initialization:
    38                           	opt stack 0
    39                           
    40                           ; Clear objects allocated to COMRAM (10 bytes)
    41  0001CE  EE00  F011         	lfsr	0,__pbssCOMRAM
    42  0001D2  0E0A               	movlw	10
    43  0001D4                     clear_0:
    44  0001D4  6AEE               	clrf	postinc0,c
    45  0001D6  06E8               	decf	wreg,f,c
    46  0001D8  E1FD               	bnz	clear_0
    47  0001DA                     end_of_initialization:
    48                           	opt stack 0
    49  0001DA                     __end_of__initialization:
    50                           	opt stack 0
    51  0001DA  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    52  0001DC  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    53  0001DE  0100               	movlb	0
    54  0001E0  EFD7  F000         	goto	_main	;jump to C main() function
    55                           postinc0	equ	0xFEE
    56                           wreg	equ	0xFE8
    57                           
    58                           	psect	bssCOMRAM
    59  000011                     __pbssCOMRAM:
    60                           	opt stack 0
    61  000011                     _buffer:
    62                           	opt stack 0
    63  000011                     	ds	4
    64  000015                     _popIndex:
    65                           	opt stack 0
    66  000015                     	ds	2
    67  000017                     _pushIndex:
    68                           	opt stack 0
    69  000017                     	ds	2
    70  000019                     _prev_switch_state:
    71                           	opt stack 0
    72  000019                     	ds	1
    73  00001A                     _prev_switch_state_2:
    74                           	opt stack 0
    75  00001A                     	ds	1
    76                           postinc0	equ	0xFEE
    77                           wreg	equ	0xFE8
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	opt stack 0
    82  000001                     ?_next:
    83                           	opt stack 0
    84                           
    85                           ; 2 bytes @ 0x0
    86  000001                     	ds	2
    87  000003                     ??_ISR:
    88                           
    89                           ; 1 bytes @ 0x2
    90  000003                     	ds	14
    91  000011                     postinc0	equ	0xFEE
    92                           wreg	equ	0xFE8
    93                           
    94                           ; 1 bytes @ 0x10
    95 ;;
    96 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    97 ;;
    98 ;; *************** function _main *****************
    99 ;; Defined at:
   100 ;;		line 113 in file "../picbuffer.c"
   101 ;; Parameters:    Size  Location     Type
   102 ;;		None
   103 ;; Auto vars:     Size  Location     Type
   104 ;;		None
   105 ;; Return value:  Size  Location     Type
   106 ;;                  1    wreg      void 
   107 ;; Registers used:
   108 ;;		wreg, status,2
   109 ;; Tracked objects:
   110 ;;		On entry : 0/0
   111 ;;		On exit  : 0/0
   112 ;;		Unchanged: 0/0
   113 ;; Data sizes:     COMRAM   BANK0   BANK1
   114 ;;      Params:         0       0       0
   115 ;;      Locals:         0       0       0
   116 ;;      Temps:          0       0       0
   117 ;;      Totals:         0       0       0
   118 ;;Total ram usage:        0 bytes
   119 ;; Hardware stack levels required when called:    3
   120 ;; This function calls:
   121 ;;		Nothing
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  0001AE                     __ptext0:
   129                           	opt stack 0
   130  0001AE                     _main:
   131                           	opt stack 28
   132                           
   133                           ;picbuffer.c: 114: OSCCON = 0b00100010;
   134                           
   135                           ;incstack = 0
   136  0001AE  0E22               	movlw	34
   137  0001B0  6ED3               	movwf	4051,c	;volatile
   138                           
   139                           ;picbuffer.c: 115: TRISC = 0;
   140  0001B2  0E00               	movlw	0
   141  0001B4  6E94               	movwf	3988,c	;volatile
   142                           
   143                           ;picbuffer.c: 116: TRISAbits.TRISA2 = 1;
   144  0001B6  8492               	bsf	3986,2,c	;volatile
   145                           
   146                           ;picbuffer.c: 117: ANSELbits.ANS2 = 0;
   147  0001B8  947E               	bcf	3966,2,c	;volatile
   148                           
   149                           ;picbuffer.c: 120: LATC = 0b00000000;
   150  0001BA  0E00               	movlw	0
   151  0001BC  6E8B               	movwf	3979,c	;volatile
   152                           
   153                           ;picbuffer.c: 124: WPUA2 = 1;
   154  0001BE  8477               	bsf	3959,2,c	;volatile
   155                           
   156                           ;picbuffer.c: 126: nRABPU = 0;
   157  0001C0  9EF1               	bcf	intcon2,7,c	;volatile
   158                           
   159                           ;picbuffer.c: 130: INTCONbits.RABIE = 1;
   160  0001C2  86F2               	bsf	intcon,3,c	;volatile
   161                           
   162                           ;picbuffer.c: 131: IOCAbits.IOCA2 = 1;
   163  0001C4  8479               	bsf	3961,2,c	;volatile
   164                           
   165                           ;picbuffer.c: 132: IOCAbits.IOCA3 = 1;
   166  0001C6  8679               	bsf	3961,3,c	;volatile
   167                           
   168                           ;picbuffer.c: 134: RCONbits.IPEN = 0;
   169  0001C8  9ED0               	bcf	4048,7,c	;volatile
   170                           
   171                           ;picbuffer.c: 135: INTCONbits.GIE = 1;
   172  0001CA  8EF2               	bsf	intcon,7,c	;volatile
   173  0001CC                     l59:
   174                           
   175                           ;picbuffer.c: 138: {
   176                           ;picbuffer.c: 139: continue;
   177  0001CC  D7FF               	goto	l59
   178  0001CE                     __end_of_main:
   179                           	opt stack 0
   180                           intcon	equ	0xFF2
   181                           intcon2	equ	0xFF1
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185 ;; *************** function _ISR *****************
   186 ;; Defined at:
   187 ;;		line 143 in file "../picbuffer.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;		None
   192 ;; Return value:  Size  Location     Type
   193 ;;                  1    wreg      void 
   194 ;; Registers used:
   195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   196 ;; Tracked objects:
   197 ;;		On entry : 0/0
   198 ;;		On exit  : 0/0
   199 ;;		Unchanged: 0/0
   200 ;; Data sizes:     COMRAM   BANK0   BANK1
   201 ;;      Params:         0       0       0
   202 ;;      Locals:         0       0       0
   203 ;;      Temps:         14       0       0
   204 ;;      Totals:        14       0       0
   205 ;;Total ram usage:       14 bytes
   206 ;; Hardware stack levels used:    1
   207 ;; Hardware stack levels required when called:    2
   208 ;; This function calls:
   209 ;;		_output
   210 ;;		_pop
   211 ;;		_push
   212 ;; This function is called by:
   213 ;;		Interrupt level 2
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	intcode
   218  000008                     __pintcode:
   219                           	opt stack 0
   220  000008                     _ISR:
   221                           	opt stack 28
   222                           
   223                           ;incstack = 0
   224  000008  821B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   225  00000A  CFFA F003          	movff	pclath,??_ISR
   226  00000E  CFFB F004          	movff	pclatu,??_ISR+1
   227  000012  CFE9 F005          	movff	fsr0l,??_ISR+2
   228  000016  CFEA F006          	movff	fsr0h,??_ISR+3
   229  00001A  CFE1 F007          	movff	fsr1l,??_ISR+4
   230  00001E  CFE2 F008          	movff	fsr1h,??_ISR+5
   231  000022  CFD9 F009          	movff	fsr2l,??_ISR+6
   232  000026  CFDA F00A          	movff	fsr2h,??_ISR+7
   233  00002A  CFF3 F00B          	movff	prodl,??_ISR+8
   234  00002E  CFF4 F00C          	movff	prodh,??_ISR+9
   235  000032  CFF6 F00D          	movff	tblptrl,??_ISR+10
   236  000036  CFF7 F00E          	movff	tblptrh,??_ISR+11
   237  00003A  CFF8 F00F          	movff	tblptru,??_ISR+12
   238  00003E  CFF5 F010          	movff	tablat,??_ISR+13
   239                           
   240                           ;picbuffer.c: 147: INTCONbits.RABIF = 0;
   241  000042  90F2               	bcf	intcon,0,c	;volatile
   242                           
   243                           ;picbuffer.c: 149: _delay((unsigned long)((5)*(500000/4000.0)));
   244  000044  0ED0               	movlw	208
   245  000046                     i2u29_47:
   246  000046  2EE8               	decfsz	wreg,f,c
   247  000048  D7FE               	goto	i2u29_47
   248  00004A  F000               	nop	
   249                           
   250                           ;picbuffer.c: 157: if (PORTAbits.RA2 == 0 && prev_switch_state == 1) pop();
   251  00004C  B480               	btfsc	3968,2,c	;volatile
   252  00004E  D004               	goto	i2l801
   253  000050  0419               	decf	_prev_switch_state,w,c
   254  000052  B4D8               	btfsc	status,2,c
   255  000054  EC91  F000         	call	_pop	;wreg free
   256  000058                     i2l801:
   257                           
   258                           ;picbuffer.c: 159: if (PORTAbits.RA2 == 0) prev_switch_state = 0;
   259  000058  B480               	btfsc	3968,2,c	;volatile
   260  00005A  D002               	goto	i2l805
   261  00005C  0E00               	movlw	0
   262  00005E  D001               	goto	L1
   263  000060                     i2l805:
   264                           
   265                           ;picbuffer.c: 160: else prev_switch_state = 1;
   266  000060  0E01               	movlw	1
   267  000062                     L1:
   268  000062  6E19               	movwf	_prev_switch_state,c
   269                           
   270                           ;picbuffer.c: 164: if(PORTAbits.RA3 == 0 && prev_switch_state_2 == 1) push();
   271  000064  B680               	btfsc	3968,3,c	;volatile
   272  000066  D004               	goto	i2l813
   273  000068  041A               	decf	_prev_switch_state_2,w,c
   274  00006A  B4D8               	btfsc	status,2,c
   275  00006C  EC60  F000         	call	_push	;wreg free
   276  000070                     i2l813:
   277                           
   278                           ;picbuffer.c: 166: if(PORTAbits.RA3) prev_switch_state_2 = 1;
   279  000070  A680               	btfss	3968,3,c	;volatile
   280  000072  D002               	goto	i2l817
   281  000074  0E01               	movlw	1
   282  000076  D001               	goto	L2
   283  000078                     i2l817:
   284                           
   285                           ;picbuffer.c: 167: else prev_switch_state_2 = 0;
   286  000078  0E00               	movlw	0
   287  00007A                     L2:
   288  00007A  6E1A               	movwf	_prev_switch_state_2,c
   289                           
   290                           ;picbuffer.c: 170: output();
   291  00007C  ECAE  F000         	call	_output	;wreg free
   292  000080  C010  FFF5         	movff	??_ISR+13,tablat
   293  000084  C00F  FFF8         	movff	??_ISR+12,tblptru
   294  000088  C00E  FFF7         	movff	??_ISR+11,tblptrh
   295  00008C  C00D  FFF6         	movff	??_ISR+10,tblptrl
   296  000090  C00C  FFF4         	movff	??_ISR+9,prodh
   297  000094  C00B  FFF3         	movff	??_ISR+8,prodl
   298  000098  C00A  FFDA         	movff	??_ISR+7,fsr2h
   299  00009C  C009  FFD9         	movff	??_ISR+6,fsr2l
   300  0000A0  C008  FFE2         	movff	??_ISR+5,fsr1h
   301  0000A4  C007  FFE1         	movff	??_ISR+4,fsr1l
   302  0000A8  C006  FFEA         	movff	??_ISR+3,fsr0h
   303  0000AC  C005  FFE9         	movff	??_ISR+2,fsr0l
   304  0000B0  C004  FFFB         	movff	??_ISR+1,pclatu
   305  0000B4  C003  FFFA         	movff	??_ISR,pclath
   306  0000B8  921B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   307  0000BA  0011               	retfie		f
   308  0000BC                     __end_of_ISR:
   309                           	opt stack 0
   310                           pclatu	equ	0xFFB
   311                           pclath	equ	0xFFA
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           prodh	equ	0xFF4
   317                           prodl	equ	0xFF3
   318                           intcon	equ	0xFF2
   319                           intcon2	equ	0xFF1
   320                           postinc0	equ	0xFEE
   321                           fsr0h	equ	0xFEA
   322                           fsr0l	equ	0xFE9
   323                           wreg	equ	0xFE8
   324                           fsr1h	equ	0xFE2
   325                           fsr1l	equ	0xFE1
   326                           fsr2h	equ	0xFDA
   327                           fsr2l	equ	0xFD9
   328                           status	equ	0xFD8
   329                           
   330 ;; *************** function _push *****************
   331 ;; Defined at:
   332 ;;		line 70 in file "../picbuffer.c"
   333 ;; Parameters:    Size  Location     Type
   334 ;;		None
   335 ;; Auto vars:     Size  Location     Type
   336 ;;		None
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      void 
   339 ;; Registers used:
   340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1
   346 ;;      Params:         0       0       0
   347 ;;      Locals:         0       0       0
   348 ;;      Temps:          0       0       0
   349 ;;      Totals:         0       0       0
   350 ;;Total ram usage:        0 bytes
   351 ;; Hardware stack levels used:    1
   352 ;; Hardware stack levels required when called:    1
   353 ;; This function calls:
   354 ;;		_next
   355 ;; This function is called by:
   356 ;;		_ISR
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text2
   361  0000C0                     __ptext2:
   362                           	opt stack 0
   363  0000C0                     _push:
   364                           	opt stack 28
   365                           
   366                           ;picbuffer.c: 72: buffer[pushIndex] = 1;
   367                           
   368                           ;incstack = 0
   369  0000C0  0E11               	movlw	low _buffer
   370  0000C2  2417               	addwf	_pushIndex,w,c
   371  0000C4  6ED9               	movwf	fsr2l,c
   372  0000C6  0E00               	movlw	high _buffer
   373  0000C8  2018               	addwfc	_pushIndex+1,w,c
   374  0000CA  6EDA               	movwf	fsr2h,c
   375  0000CC  0E01               	movlw	1
   376  0000CE  6EDF               	movwf	indf2,c
   377                           
   378                           ;picbuffer.c: 75: if(pushIndex == popIndex && buffer[next()] != 0)
   379  0000D0  5015               	movf	_popIndex,w,c
   380  0000D2  1817               	xorwf	_pushIndex,w,c
   381  0000D4  E111               	bnz	i2l44
   382  0000D6  5016               	movf	_popIndex+1,w,c
   383  0000D8  1818               	xorwf	_pushIndex+1,w,c
   384  0000DA  A4D8               	btfss	status,2,c
   385  0000DC  D00D               	goto	i2l44
   386  0000DE  ECC3  F000         	call	_next	;wreg free
   387  0000E2  0E11               	movlw	low _buffer
   388  0000E4  2401               	addwf	?_next,w,c
   389  0000E6  6ED9               	movwf	fsr2l,c
   390  0000E8  0E00               	movlw	high _buffer
   391  0000EA  2002               	addwfc	?_next+1,w,c
   392  0000EC  6EDA               	movwf	fsr2h,c
   393  0000EE  50DF               	movf	indf2,w,c
   394  0000F0  B4D8               	btfsc	status,2,c
   395  0000F2  D002               	goto	i2l44
   396                           
   397                           ;picbuffer.c: 76: {
   398                           ;picbuffer.c: 77: popIndex++;
   399  0000F4  4A15               	infsnz	_popIndex,f,c
   400  0000F6  2A16               	incf	_popIndex+1,f,c
   401  0000F8                     i2l44:
   402                           
   403                           ;picbuffer.c: 78: }
   404                           ;picbuffer.c: 81: pushIndex++;
   405  0000F8  4A17               	infsnz	_pushIndex,f,c
   406  0000FA  2A18               	incf	_pushIndex+1,f,c
   407                           
   408                           ;picbuffer.c: 84: if(pushIndex == 4) pushIndex = 0;
   409  0000FC  0E04               	movlw	4
   410  0000FE  1817               	xorwf	_pushIndex,w,c
   411  000100  1018               	iorwf	_pushIndex+1,w,c
   412  000102  A4D8               	btfss	status,2,c
   413  000104  D004               	goto	i2l787
   414  000106  0E00               	movlw	0
   415  000108  6E18               	movwf	_pushIndex+1,c
   416  00010A  0E00               	movlw	0
   417  00010C  6E17               	movwf	_pushIndex,c
   418  00010E                     i2l787:
   419                           
   420                           ;picbuffer.c: 85: if(popIndex == 4) popIndex = 0;
   421  00010E  0E04               	movlw	4
   422  000110  1815               	xorwf	_popIndex,w,c
   423  000112  1016               	iorwf	_popIndex+1,w,c
   424  000114  A4D8               	btfss	status,2,c
   425  000116  0012               	return	
   426  000118  0E00               	movlw	0
   427  00011A  6E16               	movwf	_popIndex+1,c
   428  00011C  0E00               	movlw	0
   429  00011E  6E15               	movwf	_popIndex,c
   430  000120  0012               	return	
   431  000122                     __end_of_push:
   432                           	opt stack 0
   433                           pclatu	equ	0xFFB
   434                           pclath	equ	0xFFA
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           prodh	equ	0xFF4
   440                           prodl	equ	0xFF3
   441                           intcon	equ	0xFF2
   442                           intcon2	equ	0xFF1
   443                           postinc0	equ	0xFEE
   444                           fsr0h	equ	0xFEA
   445                           fsr0l	equ	0xFE9
   446                           wreg	equ	0xFE8
   447                           fsr1h	equ	0xFE2
   448                           fsr1l	equ	0xFE1
   449                           indf2	equ	0xFDF
   450                           fsr2h	equ	0xFDA
   451                           fsr2l	equ	0xFD9
   452                           status	equ	0xFD8
   453                           
   454 ;; *************** function _next *****************
   455 ;; Defined at:
   456 ;;		line 63 in file "../picbuffer.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  2    0[COMRAM] int 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1
   470 ;;      Params:         2       0       0
   471 ;;      Locals:         0       0       0
   472 ;;      Temps:          0       0       0
   473 ;;      Totals:         2       0       0
   474 ;;Total ram usage:        2 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; This function calls:
   477 ;;		Nothing
   478 ;; This function is called by:
   479 ;;		_push
   480 ;; This function uses a non-reentrant model
   481 ;;
   482                           
   483                           	psect	text3
   484  000186                     __ptext3:
   485                           	opt stack 0
   486  000186                     _next:
   487                           	opt stack 28
   488                           
   489                           ;picbuffer.c: 65: if (pushIndex < 4-1) return pushIndex+1;
   490                           
   491                           ;incstack = 0
   492  000186  BE18               	btfsc	_pushIndex+1,7,c
   493  000188  D006               	goto	i2l765
   494  00018A  5018               	movf	_pushIndex+1,w,c
   495  00018C  E10B               	bnz	i2l771
   496  00018E  0E03               	movlw	3
   497  000190  5C17               	subwf	_pushIndex,w,c
   498  000192  B0D8               	btfsc	status,0,c
   499  000194  D007               	goto	i2l771
   500  000196                     i2l765:
   501  000196  0E01               	movlw	1
   502  000198  2417               	addwf	_pushIndex,w,c
   503  00019A  6E01               	movwf	?_next,c
   504  00019C  0E00               	movlw	0
   505  00019E  2018               	addwfc	_pushIndex+1,w,c
   506  0001A0  6E02               	movwf	?_next+1,c
   507  0001A2  0012               	return	
   508  0001A4                     i2l771:
   509                           
   510                           ;picbuffer.c: 66: else return 0;
   511  0001A4  0E00               	movlw	0
   512  0001A6  6E02               	movwf	?_next+1,c
   513  0001A8  0E00               	movlw	0
   514  0001AA  6E01               	movwf	?_next,c
   515  0001AC  0012               	return	
   516  0001AE                     __end_of_next:
   517                           	opt stack 0
   518                           pclatu	equ	0xFFB
   519                           pclath	equ	0xFFA
   520                           tblptru	equ	0xFF8
   521                           tblptrh	equ	0xFF7
   522                           tblptrl	equ	0xFF6
   523                           tablat	equ	0xFF5
   524                           prodh	equ	0xFF4
   525                           prodl	equ	0xFF3
   526                           intcon	equ	0xFF2
   527                           intcon2	equ	0xFF1
   528                           postinc0	equ	0xFEE
   529                           fsr0h	equ	0xFEA
   530                           fsr0l	equ	0xFE9
   531                           wreg	equ	0xFE8
   532                           fsr1h	equ	0xFE2
   533                           fsr1l	equ	0xFE1
   534                           indf2	equ	0xFDF
   535                           fsr2h	equ	0xFDA
   536                           fsr2l	equ	0xFD9
   537                           status	equ	0xFD8
   538                           
   539 ;; *************** function _pop *****************
   540 ;; Defined at:
   541 ;;		line 89 in file "../picbuffer.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      void 
   548 ;; Registers used:
   549 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMRAM   BANK0   BANK1
   555 ;;      Params:         0       0       0
   556 ;;      Locals:         0       0       0
   557 ;;      Temps:          0       0       0
   558 ;;      Totals:         0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used:    1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_ISR
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text4
   569  000122                     __ptext4:
   570                           	opt stack 0
   571  000122                     _pop:
   572                           	opt stack 29
   573                           
   574                           ;picbuffer.c: 91: if (buffer[popIndex] == 0)
   575                           
   576                           ;incstack = 0
   577  000122  0E11               	movlw	low _buffer
   578  000124  2415               	addwf	_popIndex,w,c
   579  000126  6ED9               	movwf	fsr2l,c
   580  000128  0E00               	movlw	high _buffer
   581  00012A  2016               	addwfc	_popIndex+1,w,c
   582  00012C  6EDA               	movwf	fsr2h,c
   583  00012E  50DF               	movf	indf2,w,c
   584  000130  B4D8               	btfsc	status,2,c
   585  000132  0012               	return	
   586                           
   587                           ;picbuffer.c: 96: else
   588                           ;picbuffer.c: 97: {
   589                           ;picbuffer.c: 98: buffer[popIndex]=0;
   590                           
   591                           ;picbuffer.c: 95: }
   592                           
   593                           ;picbuffer.c: 92: {
   594                           ;picbuffer.c: 94: return;
   595  000134  0E11               	movlw	low _buffer
   596  000136  2415               	addwf	_popIndex,w,c
   597  000138  6ED9               	movwf	fsr2l,c
   598  00013A  0E00               	movlw	high _buffer
   599  00013C  2016               	addwfc	_popIndex+1,w,c
   600  00013E  6EDA               	movwf	fsr2h,c
   601  000140  0E00               	movlw	0
   602  000142  6EDF               	movwf	indf2,c
   603                           
   604                           ;picbuffer.c: 99: popIndex++;
   605  000144  4A15               	infsnz	_popIndex,f,c
   606  000146  2A16               	incf	_popIndex+1,f,c
   607                           
   608                           ;picbuffer.c: 100: if(popIndex == 4) popIndex=0;
   609  000148  0E04               	movlw	4
   610  00014A  1815               	xorwf	_popIndex,w,c
   611  00014C  1016               	iorwf	_popIndex+1,w,c
   612  00014E  A4D8               	btfss	status,2,c
   613  000150  0012               	return	
   614  000152  0E00               	movlw	0
   615  000154  6E16               	movwf	_popIndex+1,c
   616  000156  0E00               	movlw	0
   617  000158  6E15               	movwf	_popIndex,c
   618  00015A  0012               	return	
   619  00015C                     __end_of_pop:
   620                           	opt stack 0
   621                           pclatu	equ	0xFFB
   622                           pclath	equ	0xFFA
   623                           tblptru	equ	0xFF8
   624                           tblptrh	equ	0xFF7
   625                           tblptrl	equ	0xFF6
   626                           tablat	equ	0xFF5
   627                           prodh	equ	0xFF4
   628                           prodl	equ	0xFF3
   629                           intcon	equ	0xFF2
   630                           intcon2	equ	0xFF1
   631                           postinc0	equ	0xFEE
   632                           fsr0h	equ	0xFEA
   633                           fsr0l	equ	0xFE9
   634                           wreg	equ	0xFE8
   635                           fsr1h	equ	0xFE2
   636                           fsr1l	equ	0xFE1
   637                           indf2	equ	0xFDF
   638                           fsr2h	equ	0xFDA
   639                           fsr2l	equ	0xFD9
   640                           status	equ	0xFD8
   641                           
   642 ;; *************** function _output *****************
   643 ;; Defined at:
   644 ;;		line 105 in file "../picbuffer.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		None
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1
   658 ;;      Params:         0       0       0
   659 ;;      Locals:         0       0       0
   660 ;;      Temps:          0       0       0
   661 ;;      Totals:         0       0       0
   662 ;;Total ram usage:        0 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_ISR
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text5
   672  00015C                     __ptext5:
   673                           	opt stack 0
   674  00015C                     _output:
   675                           	opt stack 29
   676                           
   677                           ;picbuffer.c: 107: LATCbits.LATC0 = buffer[0];
   678                           
   679                           ;incstack = 0
   680  00015C  B011               	btfsc	_buffer,0,c
   681  00015E  D002               	bra	i2u8_45
   682  000160  908B               	bcf	3979,0,c	;volatile
   683  000162  D001               	bra	i2u8_46
   684  000164                     i2u8_45:
   685  000164  808B               	bsf	3979,0,c	;volatile
   686  000166                     i2u8_46:
   687                           
   688                           ;picbuffer.c: 108: LATCbits.LATC1 = buffer[1];
   689  000166  B012               	btfsc	_buffer+1,0,c
   690  000168  D002               	bra	i2u9_45
   691  00016A  928B               	bcf	3979,1,c	;volatile
   692  00016C  D001               	bra	i2u9_46
   693  00016E                     i2u9_45:
   694  00016E  828B               	bsf	3979,1,c	;volatile
   695  000170                     i2u9_46:
   696                           
   697                           ;picbuffer.c: 109: LATCbits.LATC2 = buffer[2];
   698  000170  B013               	btfsc	_buffer+2,0,c
   699  000172  D002               	bra	i2u10_45
   700  000174  948B               	bcf	3979,2,c	;volatile
   701  000176  D001               	bra	i2u10_46
   702  000178                     i2u10_45:
   703  000178  848B               	bsf	3979,2,c	;volatile
   704  00017A                     i2u10_46:
   705                           
   706                           ;picbuffer.c: 110: LATCbits.LATC3 = buffer[3];
   707  00017A  B014               	btfsc	_buffer+3,0,c
   708  00017C  D002               	bra	i2u11_45
   709  00017E  968B               	bcf	3979,3,c	;volatile
   710  000180  D001               	bra	i2u11_46
   711  000182                     i2u11_45:
   712  000182  868B               	bsf	3979,3,c	;volatile
   713  000184                     i2u11_46:
   714  000184  0012               	return		;funcret
   715  000186                     __end_of_output:
   716                           	opt stack 0
   717  0000                     pclatu	equ	0xFFB
   718                           pclath	equ	0xFFA
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           tblptrl	equ	0xFF6
   722                           tablat	equ	0xFF5
   723                           prodh	equ	0xFF4
   724                           prodl	equ	0xFF3
   725                           intcon	equ	0xFF2
   726                           intcon2	equ	0xFF1
   727                           postinc0	equ	0xFEE
   728                           fsr0h	equ	0xFEA
   729                           fsr0l	equ	0xFE9
   730                           wreg	equ	0xFE8
   731                           fsr1h	equ	0xFE2
   732                           fsr1l	equ	0xFE1
   733                           indf2	equ	0xFDF
   734                           fsr2h	equ	0xFDA
   735                           fsr2l	equ	0xFD9
   736                           status	equ	0xFD8
   737                           pclatu	equ	0xFFB
   738                           pclath	equ	0xFFA
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           prodh	equ	0xFF4
   744                           prodl	equ	0xFF3
   745                           intcon	equ	0xFF2
   746                           intcon2	equ	0xFF1
   747                           postinc0	equ	0xFEE
   748                           fsr0h	equ	0xFEA
   749                           fsr0l	equ	0xFE9
   750                           wreg	equ	0xFE8
   751                           fsr1h	equ	0xFE2
   752                           fsr1l	equ	0xFE1
   753                           indf2	equ	0xFDF
   754                           fsr2h	equ	0xFDA
   755                           fsr2l	equ	0xFD9
   756                           status	equ	0xFD8
   757                           
   758                           	psect	rparam
   759  0000                     pclatu	equ	0xFFB
   760                           pclath	equ	0xFFA
   761                           tblptru	equ	0xFF8
   762                           tblptrh	equ	0xFF7
   763                           tblptrl	equ	0xFF6
   764                           tablat	equ	0xFF5
   765                           prodh	equ	0xFF4
   766                           prodl	equ	0xFF3
   767                           intcon	equ	0xFF2
   768                           intcon2	equ	0xFF1
   769                           postinc0	equ	0xFEE
   770                           fsr0h	equ	0xFEA
   771                           fsr0l	equ	0xFE9
   772                           wreg	equ	0xFE8
   773                           fsr1h	equ	0xFE2
   774                           fsr1l	equ	0xFE1
   775                           indf2	equ	0xFDF
   776                           fsr2h	equ	0xFDA
   777                           fsr2l	equ	0xFD9
   778                           status	equ	0xFD8
   779                           
   780                           	psect	temp
   781  00001B                     btemp:
   782                           	opt stack 0
   783  00001B                     	ds	1
   784  0000                     int$flags	set	btemp
   785                           pclatu	equ	0xFFB
   786                           pclath	equ	0xFFA
   787                           tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           prodh	equ	0xFF4
   792                           prodl	equ	0xFF3
   793                           intcon	equ	0xFF2
   794                           intcon2	equ	0xFF1
   795                           postinc0	equ	0xFEE
   796                           fsr0h	equ	0xFEA
   797                           fsr0l	equ	0xFE9
   798                           wreg	equ	0xFE8
   799                           fsr1h	equ	0xFE2
   800                           fsr1l	equ	0xFE1
   801                           indf2	equ	0xFDF
   802                           fsr2h	equ	0xFDA
   803                           fsr2l	equ	0xFD9
   804                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      26
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _push->_next

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 14    14      0       0
                                              2 COMRAM    14    14      0
                             _output
                                _pop
                               _push
 ---------------------------------------------------------------------------------
 (2) _push                                                 0     0      0       0
                               _next
 ---------------------------------------------------------------------------------
 (3) _next                                                 2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _pop                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _output                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _output
   _pop
   _push
     _next

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      1A       1       27.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A       7        0.0%
DATA                 0      0      1A       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Tue Apr 19 00:33:03 2016

                     l59 01CC             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _ISR 0008  
                    _pop 0122                      wreg 000FE8             __CFG_LVP$OFF 000000  
                   ?_ISR 0001                     ?_pop 0001                     _LATC 000F8B  
          __CFG_DEBUG$ON 000000                     i2l44 00F8                     _main 01AE  
                   _next 0186                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   indf2 000FDF                     fsr2l 000FD9                     _push 00C0  
                   btemp 001B                     pclat 000FFA                     prodh 000FF4  
                   prodl 000FF3                     start 00BC            __CFG_FOSC$IRC 000000  
           ___param_bank 000010                    ??_ISR 0003                    ??_pop 0001  
                  ?_main 0001                    ?_next 0001                    ?_push 0001  
                  i2l801 0058                    i2l813 0070                    i2l805 0060  
                  i2l817 0078                    i2l771 01A4                    i2l765 0196  
                  i2l787 010E                    _TRISC 000F94                    _WPUA2 007BBA  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
         __CFG_MCLRE$OFF 000000          __initialization 01CE             __end_of_main 01CE  
           __end_of_next 01AE             __end_of_push 0122                   ??_main 0011  
                 ??_next 0003                   ??_push 0003            __activetblptr 000000  
         __CFG_PLLEN$OFF 000000           __CFG_WDTEN$OFF 000000                   _OSCCON 000FD3  
                 i2u8_45 0164                   i2u8_46 0166                   i2u9_45 016E  
                 i2u9_46 0170                   _nRABPU 007F8F           __CFG_STVREN$ON 000000  
                 _buffer 0011                   clear_0 01D4                   _output 015C  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
        __CFG_HFOFST$OFF 000000               __accesstop 0060  __end_of__initialization 01DA  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ?_output 0001  
                i2u10_45 0178                  i2u10_46 017A                  i2u11_45 0182  
                i2u11_46 0184                  i2u29_47 0046          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000        _prev_switch_state 0019  
                __pcinit 01CE                _ANSELbits 000F7E                  __ramtop 0200  
                __ptext0 01AE                  __ptext2 00C0                  __ptext3 0186  
                __ptext4 0122                  __ptext5 015C          __size_of_output 002A  
           __size_of_ISR 00B4             __size_of_pop 003A     end_of_initialization 01DA  
                postinc0 000FEE                _PORTAbits 000F80                _TRISAbits 000F92  
         __end_of_output 0186      start_initialization 01CE              __end_of_ISR 00BC  
            __end_of_pop 015C                 ??_output 0001              __pbssCOMRAM 0011  
    _prev_switch_state_2 001A                __pintcode 0008                 _IOCAbits 000F79  
               _LATCbits 000F8B                 _RCONbits 000FD0                _pushIndex 0017  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0020  
          __size_of_next 0028            __size_of_push 0062                 _popIndex 0015  
               int$flags 001B               _INTCONbits 000FF2                 intlevel2 0000  
