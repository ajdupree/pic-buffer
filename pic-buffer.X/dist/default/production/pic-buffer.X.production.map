Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\pic-buffer.X.production.sym \
  --cmf=dist/default/production\pic-buffer.X.production.cmf -z -Q18F14K22 \
  -oC:\Users\Andrew\AppData\Local\Temp\s4gk.2 \
  -Mdist/default/production/pic-buffer.X.production.map -E1 -ver=XC8 \
  -ASTACK=060h-01ffh -pstack=STACK -ACODE=00h-03FFFh -ACONST=00h-03FFFh \
  -ASMALLCONST=0200h-02FFhx62 -AMEDIUMCONST=0200h-03FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-01FFh -ABIGRAM=01h-01FFh -ARAM=060h-0FFh,0100h-01FFh \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init,end_init \
  -pramtop=0200h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\Andrew\AppData\Local\Temp\s4gk.obj \
  dist/default/production\pic-buffer.X.production.obj 

Object code version is 3.11

Machine type is 18F14K22

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Andrew\AppData\Local\Temp\s4gk.obj
                end_init                             BC       BC        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\pic-buffer.X.production.obj
                intcode                               8        8       B4        4       0
                temp                                 1B       1B        1        1       1
                text5                               15C      15C       2A        4       0
                text4                               122      122       3A        4       0
                text3                               186      186       28        4       0
                text2                                C0       C0       62        4       0
                text0                               1AE      1AE       20        4       0
                cstackCOMRAM                          1        1       10        1       1
                bssCOMRAM                            11       11        A        1       1
                cinit                               1CE      1CE       16        4       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             BC       BC        4         0
                intcode                               8        8       B4         0
                reset_vec                             0        0        4         0
                text5                               15C      15C       2A         0
                text4                               122      122       3A         0
                text3                               186      186       28         0
                text2                                C0       C0       62         0
                text0                               1AE      1AE       20         0
                cinit                               1CE      1CE       16         0

        CLASS   CONST          

        CLASS   SMALLCONST     

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 1B       1B        1         1
                cstackCOMRAM                          1        1       10         1
                bssCOMRAM                            11       11        A         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00001B  00001C         1       1  COMRAM  
                intcode                        000008  0001DC  0001E4         4       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BIGRAM           00001C-0001FF              1E4
        CODE             000004-000007                4
                         0001E4-003FFF             3E1C
        COMRAM           00001C-00005F               44
        CONST            000004-000007                4
                         0001E4-003FFF             3E1C
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000200-003FFF             3E00
        RAM              000060-0001FF               A0
        SFR              000F60-000FFF               A0
        SMALLCONST       000200-003FFF              100
        STACK            000060-0001FF              1A0

                                  Symbol Table

?_next                   cstackCOMRAM 000001
_ANSELbits               (abs)        000F7E
_INTCONbits              (abs)        000FF2
_IOCAbits                (abs)        000F79
_ISR                     intcode      000008
_LATC                    (abs)        000F8B
_LATCbits                (abs)        000F8B
_OSCCON                  (abs)        000FD3
_PORTAbits               (abs)        000F80
_RCONbits                (abs)        000FD0
_TRISAbits               (abs)        000F92
_TRISC                   (abs)        000F94
_WPUA2                   (abs)        007BBA
__CFG_BOREN$OFF          (abs)        000000
__CFG_CP0$OFF            (abs)        000000
__CFG_CP1$OFF            (abs)        000000
__CFG_CPB$OFF            (abs)        000000
__CFG_CPD$OFF            (abs)        000000
__CFG_DEBUG$ON           (abs)        000000
__CFG_EBTR0$OFF          (abs)        000000
__CFG_EBTR1$OFF          (abs)        000000
__CFG_EBTRB$OFF          (abs)        000000
__CFG_FCMEN$OFF          (abs)        000000
__CFG_FOSC$IRC           (abs)        000000
__CFG_HFOFST$OFF         (abs)        000000
__CFG_LVP$OFF            (abs)        000000
__CFG_MCLRE$OFF          (abs)        000000
__CFG_PLLEN$OFF          (abs)        000000
__CFG_PWRTEN$OFF         (abs)        000000
__CFG_STVREN$ON          (abs)        000000
__CFG_WDTEN$OFF          (abs)        000000
__CFG_WRT0$OFF           (abs)        000000
__CFG_WRT1$OFF           (abs)        000000
__CFG_WRTB$OFF           (abs)        000000
__CFG_WRTC$OFF           (abs)        000000
__CFG_WRTD$OFF           (abs)        000000
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hend_init              end_init     0000C0
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         0000BC
__Hintcode               intcode      0000BC
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    0000BC
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      0000BC
__Hram                   ram          000000
__Hramtop                ramtop       000200
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000004
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   000000
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        00001C
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         00001C
__Htext                  text         000000
__Htext0                 text0        000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lend_init              end_init     0000BC
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         0000BC
__Lintcode               intcode      000008
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    0000BC
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      0000BC
__Lram                   ram          000000
__Lramtop                ramtop       000200
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000000
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         00001B
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__S0                     (abs)        30000E
__S1                     (abs)        00001C
__S2                     (abs)        000000
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000010
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000060
__activetblptr           (abs)        000000
__end_of_ISR             intcode      0000BC
__end_of__initialization cinit        0001DA
__end_of_main            text0        0001CE
__end_of_next            text3        0001AE
__end_of_output          text5        000186
__end_of_pop             text4        00015C
__end_of_push            text2        000122
__initialization         cinit        0001CE
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    000011
__pcinit                 cinit        0001CE
__pcstackCOMRAM          cstackCOMRAM 000001
__pintcode               intcode      000008
__ptext0                 text0        0001AE
__ptext2                 text2        0000C0
__ptext3                 text3        000186
__ptext4                 text4        000122
__ptext5                 text5        00015C
__ramtop                 ramtop       000200
__size_of_ISR            (abs)        000000
__size_of_main           (abs)        000000
__size_of_next           (abs)        000000
__size_of_output         (abs)        000000
__size_of_pop            (abs)        000000
__size_of_push           (abs)        000000
__smallconst             smallconst   000000
_buffer                  bssCOMRAM    000011
_main                    text0        0001AE
_nRABPU                  (abs)        007F8F
_next                    text3        000186
_output                  text5        00015C
_pop                     text4        000122
_popIndex                bssCOMRAM    000015
_prev_switch_state       bssCOMRAM    000019
_prev_switch_state_2     bssCOMRAM    00001A
_push                    text2        0000C0
_pushIndex               bssCOMRAM    000017
btemp                    temp         00001B
end_of_initialization    cinit        0001DA
int$flags                temp         00001B
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
stackhi                  (abs)        0001FF
stacklo                  (abs)        000060
start                    init         0000BC
start_initialization     cinit        0001CE


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 113 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 143 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:         14       0       0
      Totals:        14       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_output
		_pop
		_push
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function _push *****************
 Defined at:
		line 70 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_next
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _next *****************
 Defined at:
		line 63 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         2       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_push
 This function uses a non-reentrant model


 *************** function _pop *****************
 Defined at:
		line 89 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _output *****************
 Defined at:
		line 105 in file "../picbuffer.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1
      Params:         0       0       0
      Locals:         0       0       0
      Temps:          0       0       0
      Totals:         0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../picbuffer.c
		_ISR           		CODE           	0008	0000	181
		_main          		CODE           	01AE	0000	33
		_output        		CODE           	015C	0000	43
		_pop           		CODE           	0122	0000	59
		_next          		CODE           	0186	0000	41
		_push          		CODE           	00C0	0000	99

../picbuffer.c estimated size: 456

shared
		__initialization		CODE           	01CE	0000	13

shared estimated size: 13

